{
  "name": "kortex",
  "productName": "Kortex",
  "repository": "https://github.com/kortex-hub/kortex",
  "homepage": "hhttps://github.com/kortex-hub/kortex",
  "version": "0.0.1-next",
  "license": "apache-2.0",
  "type": "module",
  "private": true,
  "engines": {
    "node": ">=22.0.0",
    "npm": ">=10.2.3"
  },
  "main": "packages/main/dist/index.cjs",
  "scripts": {
    "build": "pnpm run build:main && pnpm run build:preload && pnpm run build:preload-webview && npm run build:preload:types && pnpm run build:renderer && pnpm run build:extensions",
    "build:main": "cd ./packages/main && vite build",
    "build:extensions": "echo TODO_EXTENSIONS",
    "build:extension-api": "cd ./packages/extension-api && vite build",
    "build:preload": "cd ./packages/preload && vite build",
    "build:preload-webview": "cd ./packages/preload-webview && vite build",
    "build:preload:types": "dts-cb -i \"packages/preload/tsconfig.json\" -o \"packages/preload/exposedInMainWorld.d.ts\" && dts-cb -i \"packages/preload-webview/tsconfig.json\" -o \"packages/preload-webview/exposedInWebview.d.ts\"",
    "build:renderer": "cross-env NODE_OPTIONS=--max-old-space-size=4096 vite -c packages/renderer/vite.config.js build",
    "compile": "cross-env MODE=production pnpm run build && electron-builder build --config .electron-builder.config.cjs --dir --config.asar=false",
    "compile:next": "cross-env MODE=production pnpm run build && electron-builder build --publish always --config .electron-builder.config.cjs",
    "compile:pull-request": "cross-env MODE=production pnpm run build && electron-builder build --publish never --config .electron-builder.config.cjs",
    "compile:current": "cross-env MODE=production pnpm run build && electron-builder build --config .electron-builder.config.cjs",
    "test": "pnpm run test:unit",
    "test:unit": "pnpm run build:preload:types && vitest --run",
    "test:unit:coverage": "pnpm run test:unit --coverage",
    "test:main": "vitest --run --project=main --passWithNoTests",
    "test:preload": "vitest --run --project=preload --passWithNoTests",
    "test:preload-webview": "vitest --run --project=preload-webview",
    "test:extensions": "vitest --run --project=extensions --passWithNoTests",
    "test:renderer": "pnpm run build:preload:types && vitest --run --project=renderer --passWithNoTests",
    "test:watch": "vitest watch",
    "watch": "node scripts/watch.mjs",
    "format:check": "biome format",
    "format:clean": "rimraf node_modules/.cache/prettier",
    "format:fix": "biome format --write",
    "lint:clean": "rimraf .eslintcache",
    "lint:fix": "node --max-old-space-size=8192 node_modules/eslint/bin/eslint.js --cache . --cache-strategy content --fix",
    "lint:check": "node --max-old-space-size=8192 node_modules/eslint/bin/eslint.js --cache . --cache-strategy content",
    "svelte:check": "svelte-check --ignore \"packages/ui/dist,packages/renderer/src/lib/ui/DetailsPage.svelte,packages/renderer/src/lib/ui/EngineFormPage.svelte,packages/renderer/src/lib/ui/FormPage.svelte,storybook\"",
    "typecheck:extension-api": "tsc --noEmit -p packages/extension-api/tsconfig.json",
    "typecheck:main": "tsc --noEmit -p packages/main/tsconfig.json",
    "typecheck:preload": "tsc --noEmit -p packages/preload/tsconfig.json",
    "typecheck:preload-webview": "tsc --noEmit -p packages/preload-webview/tsconfig.json",
    "typecheck:renderer": "pnpm run build:preload:types && tsc --noEmit -p packages/renderer/tsconfig.json",
    "typecheck:extensions": "echo TODO_EXTENSIONS",
    "typecheck": "pnpm run typecheck:main && pnpm run typecheck:preload && pnpm run typecheck:renderer && pnpm run typecheck:preload-webview && pnpm run typecheck:extensions && pnpm run typecheck:extension-api",
    "prepare": "husky install",
    "postinstall": "playwright install chromium"
  },
  "lint-staged": {
    "*.{js,ts,tsx,svelte}": [
      "node --max-old-space-size=8192 node_modules/eslint/bin/eslint.js --cache --fix",
      "biome format --write"
    ],
    "*.md": "prettier --cache --write",
    "*.{css,json}": "biome format --write"
  },
  "devDependencies": {
    "@biomejs/biome": "^2.1.4",
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@electron/fuses": "^1.8.0",
    "@eslint/compat": "^1.3.2",
    "@eslint/eslintrc": "^3.3.1",
    "@eslint/js": "^9.33.0",
    "@kortex-app/api": "workspace:",
    "@playwright/test": "1.54.2",
    "@rollup/plugin-commonjs": "^28.0.6",
    "@rollup/plugin-json": "^6.1.0",
    "@rollup/plugin-node-resolve": "^16.0.1",
    "@rollup/plugin-typescript": "^12.1.4",
    "@tsconfig/strictest": "^2.0.5",
    "@types/adm-zip": "^0.5.7",
    "@types/better-sqlite3": "^7.6.13",
    "@types/dockerode": "^3.3.42",
    "@types/express": "^4.17.21",
    "@types/getos": "^3.0.4",
    "@types/hosted-git-info": "^3.0.5",
    "@types/js-yaml": "^4.0.9",
    "@types/mime-types": "^3.0.1",
    "@types/ms": "^2.1.0",
    "@types/node": "^22",
    "@types/tar": "^6.1.13",
    "@types/tar-fs": "^2.0.4",
    "@types/validator": "^13.15.2",
    "@types/ws": "^8.18.1",
    "@typescript-eslint/eslint-plugin": "^8.39.1",
    "@typescript-eslint/parser": "^8.39.1",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/eslint-plugin": "^1.3.4",
    "cross-env": "10.0.0",
    "dts-for-context-bridge": "0.7.1",
    "electron": "37.2.6",
    "electron-builder": "26.0.12",
    "electron-builder-notarize": "^1.5.2",
    "eslint": "^9.33.0",
    "eslint-import-resolver-custom-alias": "^1.3.2",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-etc": "^2.0.3",
    "eslint-plugin-file-progress": "^3.0.2",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-no-null": "^1.0.2",
    "eslint-plugin-redundant-undefined": "^1.0.0",
    "eslint-plugin-simple-import-sort": "^12.1.1",
    "eslint-plugin-sonarjs": "^3.0.4",
    "eslint-plugin-unicorn": "^60.0.0",
    "fzstd": "^0.1.1",
    "get-tsconfig": "^4.10.1",
    "globals": "^16.3.0",
    "husky": "^9.1.7",
    "inversify": "^7.7.1",
    "js-yaml": "^4.1.0",
    "lint-staged": "^16.1.5",
    "minimist": "^1.2.8",
    "msw": "^2.10.4",
    "prettier": "^3.6.2",
    "proxy": "^2.2.0",
    "typescript": "5.9.2",
    "typescript-eslint": "^8.39.1",
    "validator": "^13.15.15",
    "vite": "^7.1.2",
    "vitest": "^3.2.4",
    "xvfb-maybe": "^0.2.1",
    "mcp-registry": "workspace:*"
  },
  "dependencies": {
    "@docker/extension-api-client-types": "0.4.2",
    "@kubernetes/client-node": "^1.3.0",
    "@modelcontextprotocol/sdk": "^1.17.2",
    "@oslojs/crypto": "^1.0.1",
    "@oslojs/encoding": "^1.1.0",
    "@segment/analytics-node": "^2.3.0",
    "@types/semver": "^7.7.0",
    "@types/stream-json": "^1.7.8",
    "@types/winreg": "^1.2.36",
    "adm-zip": "^0.5.16",
    "ai": "^5.0.11",
    "bcrypt-ts": "^7.1.0",
    "better-sqlite3": "^12.2.0",
    "check-disk-space": "^3.4.0",
    "chokidar": "^3.6.0",
    "compare-versions": "^6.1.1",
    "date.js": "^0.3.3",
    "dockerode": "^4.0.7",
    "drizzle-orm": "^0.44.4",
    "electron-context-menu": "4.1.0",
    "electron-updater": "6.6.4",
    "electron-util": "^0.18.1",
    "express": "^4.21.2",
    "getos": "^3.2.1",
    "got": "^14.4.7",
    "hosted-git-info": "^9.0.0",
    "hpagent": "^1.2.0",
    "mime-types": "^3.0.1",
    "minimist": "^1.2.8",
    "moment": "^2.30.1",
    "ms": "^2.1.3",
    "neverthrow": "^8.2.0",
    "os-locale": "^6.0.2",
    "semver": "^7.7.2",
    "stream-json": "^1.9.1",
    "sudo-prompt": "^9.2.1",
    "tar": "^7.4.3",
    "tar-fs": "^3.1.0",
    "tar-stream": "^3.1.7",
    "undici": "^7.13.0",
    "win-ca": "^3.5.1",
    "winreg": "^1.2.5",
    "yaml": "^2.8.1"
  },
  "pnpm": {
    "overrides": {
      "rollup": "^4.22.5",
      "react-router>path-to-regexp": "^1.9.0",
      "serve-handler>path-to-regexp": "^3.3.0",
      "express>cookie": "^0.7.0",
      "@docusaurus/theme-mermaid>mermaid": "^11.4.1",
      "@docusaurus/mdx-loader>image-size": "^1.2.1",
      "@docusaurus/mdx-loader>estree-util-value-to-estree": "^3.3.3",
      "webpack-dev-server>http-proxy-middleware": "^2.0.9",
      "@kubernetes/client-node>jsonpath-plus": "^10.3.0",
      "vitest>vite": "^6.1.0",
      "esbuild-register>esbuild": "^0.25.0",
      "tsx>esbuild": "^0.25.0",
      "vite>esbuild": "^0.25.0"
    },
    "patchedDependencies": {
      "@kubernetes/client-node": "patches/@kubernetes__client-node.patch"
    }
  },
  "packageManager": "pnpm@10.15.0+sha512.486ebc259d3e999a4e8691ce03b5cac4a71cbeca39372a9b762cb500cfdf0873e2cb16abe3d951b1ee2cf012503f027b98b6584e4df22524e0c7450d9ec7aa7b"
}
